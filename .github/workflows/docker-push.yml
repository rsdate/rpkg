name: Push to Docker registry

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "release" ]


jobs:
  push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: rsdate/rpkg
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
    - name: Go Build Cache for Docker
      uses: actions/cache@v4
      with:
        path: go-build-cache
        key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}
    - name: Inject go-build-cache
      uses: reproducible-containers/buildkit-cache-dance@v2.1.4
      with:
        cache-source: go-build-cache
    - name: Build and push
      id: push
      uses: docker/build-push-action@v6
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: docker/build/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64,darwin/arm64,darwin/amd64,windows/amd64
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2.2.2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true